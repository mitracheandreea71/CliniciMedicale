#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CliniciMedicale")]
	public partial class CliniciDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnalize(Analize instance);
    partial void UpdateAnalize(Analize instance);
    partial void DeleteAnalize(Analize instance);
    partial void InsertAnalize_Factura(Analize_Factura instance);
    partial void UpdateAnalize_Factura(Analize_Factura instance);
    partial void DeleteAnalize_Factura(Analize_Factura instance);
    partial void InsertAngajat(Angajat instance);
    partial void UpdateAngajat(Angajat instance);
    partial void DeleteAngajat(Angajat instance);
    partial void InsertAsigurare(Asigurare instance);
    partial void UpdateAsigurare(Asigurare instance);
    partial void DeleteAsigurare(Asigurare instance);
    partial void InsertAsigurari(Asigurari instance);
    partial void UpdateAsigurari(Asigurari instance);
    partial void DeleteAsigurari(Asigurari instance);
    partial void InsertBuletin_Analize(Buletin_Analize instance);
    partial void UpdateBuletin_Analize(Buletin_Analize instance);
    partial void DeleteBuletin_Analize(Buletin_Analize instance);
    partial void InsertClinica(Clinica instance);
    partial void UpdateClinica(Clinica instance);
    partial void DeleteClinica(Clinica instance);
    partial void InsertConsultatie(Consultatie instance);
    partial void UpdateConsultatie(Consultatie instance);
    partial void DeleteConsultatie(Consultatie instance);
    partial void InsertConsultatii_Factura(Consultatii_Factura instance);
    partial void UpdateConsultatii_Factura(Consultatii_Factura instance);
    partial void DeleteConsultatii_Factura(Consultatii_Factura instance);
    partial void InsertDepartament(Departament instance);
    partial void UpdateDepartament(Departament instance);
    partial void DeleteDepartament(Departament instance);
    partial void InsertDiagnostic(Diagnostic instance);
    partial void UpdateDiagnostic(Diagnostic instance);
    partial void DeleteDiagnostic(Diagnostic instance);
    partial void InsertFactura(Factura instance);
    partial void UpdateFactura(Factura instance);
    partial void DeleteFactura(Factura instance);
    partial void InsertFunctie(Functie instance);
    partial void UpdateFunctie(Functie instance);
    partial void DeleteFunctie(Functie instance);
    partial void InsertIncadrare_Departament(Incadrare_Departament instance);
    partial void UpdateIncadrare_Departament(Incadrare_Departament instance);
    partial void DeleteIncadrare_Departament(Incadrare_Departament instance);
    partial void InsertPacient(Pacient instance);
    partial void UpdatePacient(Pacient instance);
    partial void DeletePacient(Pacient instance);
    partial void InsertRezultat_Analize(Rezultat_Analize instance);
    partial void UpdateRezultat_Analize(Rezultat_Analize instance);
    partial void DeleteRezultat_Analize(Rezultat_Analize instance);
    partial void InsertFormular_Analize(Formular_Analize instance);
    partial void UpdateFormular_Analize(Formular_Analize instance);
    partial void DeleteFormular_Analize(Formular_Analize instance);
    #endregion
		
		public CliniciDataContext() : 
				base(global::Project.Properties.Settings.Default.CliniciMedicaleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CliniciDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CliniciDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CliniciDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CliniciDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Analize> Analizes
		{
			get
			{
				return this.GetTable<Analize>();
			}
		}
		
		public System.Data.Linq.Table<Analize_Factura> Analize_Facturas
		{
			get
			{
				return this.GetTable<Analize_Factura>();
			}
		}
		
		public System.Data.Linq.Table<Angajat> Angajats
		{
			get
			{
				return this.GetTable<Angajat>();
			}
		}
		
		public System.Data.Linq.Table<Apartenenta_Formular> Apartenenta_Formulars
		{
			get
			{
				return this.GetTable<Apartenenta_Formular>();
			}
		}
		
		public System.Data.Linq.Table<Asigurare> Asigurares
		{
			get
			{
				return this.GetTable<Asigurare>();
			}
		}
		
		public System.Data.Linq.Table<Asigurari> Asiguraris
		{
			get
			{
				return this.GetTable<Asigurari>();
			}
		}
		
		public System.Data.Linq.Table<Buletin_Analize> Buletin_Analizes
		{
			get
			{
				return this.GetTable<Buletin_Analize>();
			}
		}
		
		public System.Data.Linq.Table<Clinica> Clinicas
		{
			get
			{
				return this.GetTable<Clinica>();
			}
		}
		
		public System.Data.Linq.Table<Consultatie> Consultaties
		{
			get
			{
				return this.GetTable<Consultatie>();
			}
		}
		
		public System.Data.Linq.Table<Consultatii_Factura> Consultatii_Facturas
		{
			get
			{
				return this.GetTable<Consultatii_Factura>();
			}
		}
		
		public System.Data.Linq.Table<Departament> Departaments
		{
			get
			{
				return this.GetTable<Departament>();
			}
		}
		
		public System.Data.Linq.Table<Diagnostic> Diagnostics
		{
			get
			{
				return this.GetTable<Diagnostic>();
			}
		}
		
		public System.Data.Linq.Table<Factura> Facturas
		{
			get
			{
				return this.GetTable<Factura>();
			}
		}
		
		public System.Data.Linq.Table<Functie> Functies
		{
			get
			{
				return this.GetTable<Functie>();
			}
		}
		
		public System.Data.Linq.Table<Incadrare_Departament> Incadrare_Departaments
		{
			get
			{
				return this.GetTable<Incadrare_Departament>();
			}
		}
		
		public System.Data.Linq.Table<Pacient> Pacients
		{
			get
			{
				return this.GetTable<Pacient>();
			}
		}
		
		public System.Data.Linq.Table<Rezultat_Analize> Rezultat_Analizes
		{
			get
			{
				return this.GetTable<Rezultat_Analize>();
			}
		}
		
		public System.Data.Linq.Table<Formular_Analize> Formular_Analizes
		{
			get
			{
				return this.GetTable<Formular_Analize>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Analize")]
	public partial class Analize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_analiza;
		
		private string _denumire_analiza;
		
		private string _valori_referinta;
		
		private string _unitate_masura;
		
		private EntitySet<Rezultat_Analize> _Rezultat_Analizes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_analizaChanging(int value);
    partial void Onid_analizaChanged();
    partial void Ondenumire_analizaChanging(string value);
    partial void Ondenumire_analizaChanged();
    partial void Onvalori_referintaChanging(string value);
    partial void Onvalori_referintaChanged();
    partial void Onunitate_masuraChanging(string value);
    partial void Onunitate_masuraChanged();
    #endregion
		
		public Analize()
		{
			this._Rezultat_Analizes = new EntitySet<Rezultat_Analize>(new Action<Rezultat_Analize>(this.attach_Rezultat_Analizes), new Action<Rezultat_Analize>(this.detach_Rezultat_Analizes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_analiza", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_analiza
		{
			get
			{
				return this._id_analiza;
			}
			set
			{
				if ((this._id_analiza != value))
				{
					this.Onid_analizaChanging(value);
					this.SendPropertyChanging();
					this._id_analiza = value;
					this.SendPropertyChanged("id_analiza");
					this.Onid_analizaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_denumire_analiza", DbType="VarChar(50)")]
		public string denumire_analiza
		{
			get
			{
				return this._denumire_analiza;
			}
			set
			{
				if ((this._denumire_analiza != value))
				{
					this.Ondenumire_analizaChanging(value);
					this.SendPropertyChanging();
					this._denumire_analiza = value;
					this.SendPropertyChanged("denumire_analiza");
					this.Ondenumire_analizaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valori_referinta", DbType="VarChar(50)")]
		public string valori_referinta
		{
			get
			{
				return this._valori_referinta;
			}
			set
			{
				if ((this._valori_referinta != value))
				{
					this.Onvalori_referintaChanging(value);
					this.SendPropertyChanging();
					this._valori_referinta = value;
					this.SendPropertyChanged("valori_referinta");
					this.Onvalori_referintaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitate_masura", DbType="VarChar(50)")]
		public string unitate_masura
		{
			get
			{
				return this._unitate_masura;
			}
			set
			{
				if ((this._unitate_masura != value))
				{
					this.Onunitate_masuraChanging(value);
					this.SendPropertyChanging();
					this._unitate_masura = value;
					this.SendPropertyChanged("unitate_masura");
					this.Onunitate_masuraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Analize_Rezultat_Analize", Storage="_Rezultat_Analizes", ThisKey="id_analiza", OtherKey="id_analiza")]
		public EntitySet<Rezultat_Analize> Rezultat_Analizes
		{
			get
			{
				return this._Rezultat_Analizes;
			}
			set
			{
				this._Rezultat_Analizes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rezultat_Analizes(Rezultat_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Analize = this;
		}
		
		private void detach_Rezultat_Analizes(Rezultat_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Analize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Analize_Factura")]
	public partial class Analize_Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_serviciu;
		
		private System.Nullable<int> _id_factura;
		
		private System.Nullable<int> _id_analize;
		
		private EntityRef<Buletin_Analize> _Buletin_Analize;
		
		private EntityRef<Factura> _Factura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_serviciuChanging(int value);
    partial void Onid_serviciuChanged();
    partial void Onid_facturaChanging(System.Nullable<int> value);
    partial void Onid_facturaChanged();
    partial void Onid_analizeChanging(System.Nullable<int> value);
    partial void Onid_analizeChanged();
    #endregion
		
		public Analize_Factura()
		{
			this._Buletin_Analize = default(EntityRef<Buletin_Analize>);
			this._Factura = default(EntityRef<Factura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_serviciu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_serviciu
		{
			get
			{
				return this._id_serviciu;
			}
			set
			{
				if ((this._id_serviciu != value))
				{
					this.Onid_serviciuChanging(value);
					this.SendPropertyChanging();
					this._id_serviciu = value;
					this.SendPropertyChanged("id_serviciu");
					this.Onid_serviciuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_factura", DbType="Int")]
		public System.Nullable<int> id_factura
		{
			get
			{
				return this._id_factura;
			}
			set
			{
				if ((this._id_factura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_facturaChanging(value);
					this.SendPropertyChanging();
					this._id_factura = value;
					this.SendPropertyChanged("id_factura");
					this.Onid_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_analize", DbType="Int")]
		public System.Nullable<int> id_analize
		{
			get
			{
				return this._id_analize;
			}
			set
			{
				if ((this._id_analize != value))
				{
					if (this._Buletin_Analize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_analizeChanging(value);
					this.SendPropertyChanging();
					this._id_analize = value;
					this.SendPropertyChanged("id_analize");
					this.Onid_analizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buletin_Analize_Analize_Factura", Storage="_Buletin_Analize", ThisKey="id_analize", OtherKey="id_buletin", IsForeignKey=true)]
		public Buletin_Analize Buletin_Analize
		{
			get
			{
				return this._Buletin_Analize.Entity;
			}
			set
			{
				Buletin_Analize previousValue = this._Buletin_Analize.Entity;
				if (((previousValue != value) 
							|| (this._Buletin_Analize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buletin_Analize.Entity = null;
						previousValue.Analize_Facturas.Remove(this);
					}
					this._Buletin_Analize.Entity = value;
					if ((value != null))
					{
						value.Analize_Facturas.Add(this);
						this._id_analize = value.id_buletin;
					}
					else
					{
						this._id_analize = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buletin_Analize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Analize_Factura", Storage="_Factura", ThisKey="id_factura", OtherKey="id_factura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Analize_Facturas.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Analize_Facturas.Add(this);
						this._id_factura = value.id_factura;
					}
					else
					{
						this._id_factura = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Angajat")]
	public partial class Angajat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_angajat;
		
		private string _nume;
		
		private string _prenume;
		
		private string _username;
		
		private string _parola;
		
		private string _email;
		
		private string _telefon;
		
		private string _specialitate;
		
		private System.Nullable<decimal> _rating;
		
		private string _imagine_cale;
		
		private string _titulatura;
		
		private EntitySet<Buletin_Analize> _Buletin_Analizes;
		
		private EntitySet<Consultatie> _Consultaties;
		
		private EntitySet<Consultatie> _Consultaties1;
		
		private EntitySet<Functie> _Functies;
		
		private EntitySet<Incadrare_Departament> _Incadrare_Departaments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_angajatChanging(int value);
    partial void Onid_angajatChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    partial void OnprenumeChanging(string value);
    partial void OnprenumeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnparolaChanging(string value);
    partial void OnparolaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    partial void OnspecialitateChanging(string value);
    partial void OnspecialitateChanged();
    partial void OnratingChanging(System.Nullable<decimal> value);
    partial void OnratingChanged();
    partial void Onimagine_caleChanging(string value);
    partial void Onimagine_caleChanged();
    partial void OntitulaturaChanging(string value);
    partial void OntitulaturaChanged();
    #endregion
		
		public Angajat()
		{
			this._Buletin_Analizes = new EntitySet<Buletin_Analize>(new Action<Buletin_Analize>(this.attach_Buletin_Analizes), new Action<Buletin_Analize>(this.detach_Buletin_Analizes));
			this._Consultaties = new EntitySet<Consultatie>(new Action<Consultatie>(this.attach_Consultaties), new Action<Consultatie>(this.detach_Consultaties));
			this._Consultaties1 = new EntitySet<Consultatie>(new Action<Consultatie>(this.attach_Consultaties1), new Action<Consultatie>(this.detach_Consultaties1));
			this._Functies = new EntitySet<Functie>(new Action<Functie>(this.attach_Functies), new Action<Functie>(this.detach_Functies));
			this._Incadrare_Departaments = new EntitySet<Incadrare_Departament>(new Action<Incadrare_Departament>(this.attach_Incadrare_Departaments), new Action<Incadrare_Departament>(this.detach_Incadrare_Departaments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_angajat
		{
			get
			{
				return this._id_angajat;
			}
			set
			{
				if ((this._id_angajat != value))
				{
					this.Onid_angajatChanging(value);
					this.SendPropertyChanging();
					this._id_angajat = value;
					this.SendPropertyChanged("id_angajat");
					this.Onid_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="VarChar(50)")]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenume", DbType="VarChar(50)")]
		public string prenume
		{
			get
			{
				return this._prenume;
			}
			set
			{
				if ((this._prenume != value))
				{
					this.OnprenumeChanging(value);
					this.SendPropertyChanging();
					this._prenume = value;
					this.SendPropertyChanged("prenume");
					this.OnprenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parola", DbType="VarChar(50)")]
		public string parola
		{
			get
			{
				return this._parola;
			}
			set
			{
				if ((this._parola != value))
				{
					this.OnparolaChanging(value);
					this.SendPropertyChanging();
					this._parola = value;
					this.SendPropertyChanged("parola");
					this.OnparolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="VarChar(11)")]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialitate", DbType="NVarChar(100)")]
		public string specialitate
		{
			get
			{
				return this._specialitate;
			}
			set
			{
				if ((this._specialitate != value))
				{
					this.OnspecialitateChanging(value);
					this.SendPropertyChanging();
					this._specialitate = value;
					this.SendPropertyChanged("specialitate");
					this.OnspecialitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rating", DbType="Decimal(4,2)")]
		public System.Nullable<decimal> rating
		{
			get
			{
				return this._rating;
			}
			set
			{
				if ((this._rating != value))
				{
					this.OnratingChanging(value);
					this.SendPropertyChanging();
					this._rating = value;
					this.SendPropertyChanged("rating");
					this.OnratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagine_cale", DbType="VarChar(255)")]
		public string imagine_cale
		{
			get
			{
				return this._imagine_cale;
			}
			set
			{
				if ((this._imagine_cale != value))
				{
					this.Onimagine_caleChanging(value);
					this.SendPropertyChanging();
					this._imagine_cale = value;
					this.SendPropertyChanged("imagine_cale");
					this.Onimagine_caleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulatura", DbType="VarChar(100)")]
		public string titulatura
		{
			get
			{
				return this._titulatura;
			}
			set
			{
				if ((this._titulatura != value))
				{
					this.OntitulaturaChanging(value);
					this.SendPropertyChanging();
					this._titulatura = value;
					this.SendPropertyChanged("titulatura");
					this.OntitulaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Buletin_Analize", Storage="_Buletin_Analizes", ThisKey="id_angajat", OtherKey="id_seflab")]
		public EntitySet<Buletin_Analize> Buletin_Analizes
		{
			get
			{
				return this._Buletin_Analizes;
			}
			set
			{
				this._Buletin_Analizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Consultatie", Storage="_Consultaties", ThisKey="id_angajat", OtherKey="id_asistent")]
		public EntitySet<Consultatie> Consultaties
		{
			get
			{
				return this._Consultaties;
			}
			set
			{
				this._Consultaties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Consultatie1", Storage="_Consultaties1", ThisKey="id_angajat", OtherKey="id_doctor")]
		public EntitySet<Consultatie> Consultaties1
		{
			get
			{
				return this._Consultaties1;
			}
			set
			{
				this._Consultaties1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Functie", Storage="_Functies", ThisKey="id_angajat", OtherKey="id_angajat")]
		public EntitySet<Functie> Functies
		{
			get
			{
				return this._Functies;
			}
			set
			{
				this._Functies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Incadrare_Departament", Storage="_Incadrare_Departaments", ThisKey="id_angajat", OtherKey="id_angajat")]
		public EntitySet<Incadrare_Departament> Incadrare_Departaments
		{
			get
			{
				return this._Incadrare_Departaments;
			}
			set
			{
				this._Incadrare_Departaments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = this;
		}
		
		private void detach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = null;
		}
		
		private void attach_Consultaties(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = this;
		}
		
		private void detach_Consultaties(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = null;
		}
		
		private void attach_Consultaties1(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat1 = this;
		}
		
		private void detach_Consultaties1(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat1 = null;
		}
		
		private void attach_Functies(Functie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = this;
		}
		
		private void detach_Functies(Functie entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = null;
		}
		
		private void attach_Incadrare_Departaments(Incadrare_Departament entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = this;
		}
		
		private void detach_Incadrare_Departaments(Incadrare_Departament entity)
		{
			this.SendPropertyChanging();
			entity.Angajat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Apartenenta_Formular")]
	public partial class Apartenenta_Formular
	{
		
		private System.Nullable<int> _id_formular;
		
		private System.Nullable<int> _id_analiza;
		
		public Apartenenta_Formular()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_formular", DbType="Int")]
		public System.Nullable<int> id_formular
		{
			get
			{
				return this._id_formular;
			}
			set
			{
				if ((this._id_formular != value))
				{
					this._id_formular = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_analiza", DbType="Int")]
		public System.Nullable<int> id_analiza
		{
			get
			{
				return this._id_analiza;
			}
			set
			{
				if ((this._id_analiza != value))
				{
					this._id_analiza = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asigurare")]
	public partial class Asigurare : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_asigurare;
		
		private System.Nullable<int> _id_asigurator;
		
		private System.Nullable<int> _id_pacient;
		
		private System.Nullable<System.DateTime> _data_asigurare;
		
		private System.Nullable<System.DateTime> _data_expirare;
		
		private EntityRef<Asigurari> _Asigurari;
		
		private EntityRef<Pacient> _Pacient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_asigurareChanging(int value);
    partial void Onid_asigurareChanged();
    partial void Onid_asiguratorChanging(System.Nullable<int> value);
    partial void Onid_asiguratorChanged();
    partial void Onid_pacientChanging(System.Nullable<int> value);
    partial void Onid_pacientChanged();
    partial void Ondata_asigurareChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_asigurareChanged();
    partial void Ondata_expirareChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_expirareChanged();
    #endregion
		
		public Asigurare()
		{
			this._Asigurari = default(EntityRef<Asigurari>);
			this._Pacient = default(EntityRef<Pacient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asigurare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_asigurare
		{
			get
			{
				return this._id_asigurare;
			}
			set
			{
				if ((this._id_asigurare != value))
				{
					this.Onid_asigurareChanging(value);
					this.SendPropertyChanging();
					this._id_asigurare = value;
					this.SendPropertyChanged("id_asigurare");
					this.Onid_asigurareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asigurator", DbType="Int")]
		public System.Nullable<int> id_asigurator
		{
			get
			{
				return this._id_asigurator;
			}
			set
			{
				if ((this._id_asigurator != value))
				{
					if (this._Asigurari.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_asiguratorChanging(value);
					this.SendPropertyChanging();
					this._id_asigurator = value;
					this.SendPropertyChanged("id_asigurator");
					this.Onid_asiguratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacient", DbType="Int")]
		public System.Nullable<int> id_pacient
		{
			get
			{
				return this._id_pacient;
			}
			set
			{
				if ((this._id_pacient != value))
				{
					if (this._Pacient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacientChanging(value);
					this.SendPropertyChanging();
					this._id_pacient = value;
					this.SendPropertyChanged("id_pacient");
					this.Onid_pacientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_asigurare", DbType="Date")]
		public System.Nullable<System.DateTime> data_asigurare
		{
			get
			{
				return this._data_asigurare;
			}
			set
			{
				if ((this._data_asigurare != value))
				{
					this.Ondata_asigurareChanging(value);
					this.SendPropertyChanging();
					this._data_asigurare = value;
					this.SendPropertyChanged("data_asigurare");
					this.Ondata_asigurareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_expirare", DbType="Date")]
		public System.Nullable<System.DateTime> data_expirare
		{
			get
			{
				return this._data_expirare;
			}
			set
			{
				if ((this._data_expirare != value))
				{
					this.Ondata_expirareChanging(value);
					this.SendPropertyChanging();
					this._data_expirare = value;
					this.SendPropertyChanged("data_expirare");
					this.Ondata_expirareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asigurari_Asigurare", Storage="_Asigurari", ThisKey="id_asigurator", OtherKey="id_asigurator", IsForeignKey=true)]
		public Asigurari Asigurari
		{
			get
			{
				return this._Asigurari.Entity;
			}
			set
			{
				Asigurari previousValue = this._Asigurari.Entity;
				if (((previousValue != value) 
							|| (this._Asigurari.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asigurari.Entity = null;
						previousValue.Asigurares.Remove(this);
					}
					this._Asigurari.Entity = value;
					if ((value != null))
					{
						value.Asigurares.Add(this);
						this._id_asigurator = value.id_asigurator;
					}
					else
					{
						this._id_asigurator = default(Nullable<int>);
					}
					this.SendPropertyChanged("Asigurari");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Asigurare", Storage="_Pacient", ThisKey="id_pacient", OtherKey="id_pacient", IsForeignKey=true)]
		public Pacient Pacient
		{
			get
			{
				return this._Pacient.Entity;
			}
			set
			{
				Pacient previousValue = this._Pacient.Entity;
				if (((previousValue != value) 
							|| (this._Pacient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacient.Entity = null;
						previousValue.Asigurares.Remove(this);
					}
					this._Pacient.Entity = value;
					if ((value != null))
					{
						value.Asigurares.Add(this);
						this._id_pacient = value.id_pacient;
					}
					else
					{
						this._id_pacient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pacient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asigurari")]
	public partial class Asigurari : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_asigurator;
		
		private string _nume_asigurator;
		
		private string _nume_asigurare;
		
		private EntitySet<Asigurare> _Asigurares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_asiguratorChanging(int value);
    partial void Onid_asiguratorChanged();
    partial void Onnume_asiguratorChanging(string value);
    partial void Onnume_asiguratorChanged();
    partial void Onnume_asigurareChanging(string value);
    partial void Onnume_asigurareChanged();
    #endregion
		
		public Asigurari()
		{
			this._Asigurares = new EntitySet<Asigurare>(new Action<Asigurare>(this.attach_Asigurares), new Action<Asigurare>(this.detach_Asigurares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asigurator", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_asigurator
		{
			get
			{
				return this._id_asigurator;
			}
			set
			{
				if ((this._id_asigurator != value))
				{
					this.Onid_asiguratorChanging(value);
					this.SendPropertyChanging();
					this._id_asigurator = value;
					this.SendPropertyChanged("id_asigurator");
					this.Onid_asiguratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume_asigurator", DbType="VarChar(100)")]
		public string nume_asigurator
		{
			get
			{
				return this._nume_asigurator;
			}
			set
			{
				if ((this._nume_asigurator != value))
				{
					this.Onnume_asiguratorChanging(value);
					this.SendPropertyChanging();
					this._nume_asigurator = value;
					this.SendPropertyChanged("nume_asigurator");
					this.Onnume_asiguratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume_asigurare", DbType="VarChar(100)")]
		public string nume_asigurare
		{
			get
			{
				return this._nume_asigurare;
			}
			set
			{
				if ((this._nume_asigurare != value))
				{
					this.Onnume_asigurareChanging(value);
					this.SendPropertyChanging();
					this._nume_asigurare = value;
					this.SendPropertyChanged("nume_asigurare");
					this.Onnume_asigurareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asigurari_Asigurare", Storage="_Asigurares", ThisKey="id_asigurator", OtherKey="id_asigurator")]
		public EntitySet<Asigurare> Asigurares
		{
			get
			{
				return this._Asigurares;
			}
			set
			{
				this._Asigurares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asigurares(Asigurare entity)
		{
			this.SendPropertyChanging();
			entity.Asigurari = this;
		}
		
		private void detach_Asigurares(Asigurare entity)
		{
			this.SendPropertyChanging();
			entity.Asigurari = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buletin_Analize")]
	public partial class Buletin_Analize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_buletin;
		
		private System.Nullable<int> _id_formular_analize;
		
		private System.Nullable<int> _id_pacient;
		
		private System.Nullable<System.DateTime> _data_recoltare;
		
		private System.Nullable<int> _id_seflab;
		
		private EntitySet<Analize_Factura> _Analize_Facturas;
		
		private EntitySet<Rezultat_Analize> _Rezultat_Analizes;
		
		private EntityRef<Angajat> _Angajat;
		
		private EntityRef<Pacient> _Pacient;
		
		private EntityRef<Formular_Analize> _Formular_Analize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_buletinChanging(int value);
    partial void Onid_buletinChanged();
    partial void Onid_formular_analizeChanging(System.Nullable<int> value);
    partial void Onid_formular_analizeChanged();
    partial void Onid_pacientChanging(System.Nullable<int> value);
    partial void Onid_pacientChanged();
    partial void Ondata_recoltareChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_recoltareChanged();
    partial void Onid_seflabChanging(System.Nullable<int> value);
    partial void Onid_seflabChanged();
    #endregion
		
		public Buletin_Analize()
		{
			this._Analize_Facturas = new EntitySet<Analize_Factura>(new Action<Analize_Factura>(this.attach_Analize_Facturas), new Action<Analize_Factura>(this.detach_Analize_Facturas));
			this._Rezultat_Analizes = new EntitySet<Rezultat_Analize>(new Action<Rezultat_Analize>(this.attach_Rezultat_Analizes), new Action<Rezultat_Analize>(this.detach_Rezultat_Analizes));
			this._Angajat = default(EntityRef<Angajat>);
			this._Pacient = default(EntityRef<Pacient>);
			this._Formular_Analize = default(EntityRef<Formular_Analize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_buletin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_buletin
		{
			get
			{
				return this._id_buletin;
			}
			set
			{
				if ((this._id_buletin != value))
				{
					this.Onid_buletinChanging(value);
					this.SendPropertyChanging();
					this._id_buletin = value;
					this.SendPropertyChanged("id_buletin");
					this.Onid_buletinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_formular_analize", DbType="Int")]
		public System.Nullable<int> id_formular_analize
		{
			get
			{
				return this._id_formular_analize;
			}
			set
			{
				if ((this._id_formular_analize != value))
				{
					if (this._Formular_Analize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_formular_analizeChanging(value);
					this.SendPropertyChanging();
					this._id_formular_analize = value;
					this.SendPropertyChanged("id_formular_analize");
					this.Onid_formular_analizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacient", DbType="Int")]
		public System.Nullable<int> id_pacient
		{
			get
			{
				return this._id_pacient;
			}
			set
			{
				if ((this._id_pacient != value))
				{
					if (this._Pacient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacientChanging(value);
					this.SendPropertyChanging();
					this._id_pacient = value;
					this.SendPropertyChanged("id_pacient");
					this.Onid_pacientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_recoltare", DbType="Date")]
		public System.Nullable<System.DateTime> data_recoltare
		{
			get
			{
				return this._data_recoltare;
			}
			set
			{
				if ((this._data_recoltare != value))
				{
					this.Ondata_recoltareChanging(value);
					this.SendPropertyChanging();
					this._data_recoltare = value;
					this.SendPropertyChanged("data_recoltare");
					this.Ondata_recoltareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_seflab", DbType="Int")]
		public System.Nullable<int> id_seflab
		{
			get
			{
				return this._id_seflab;
			}
			set
			{
				if ((this._id_seflab != value))
				{
					if (this._Angajat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_seflabChanging(value);
					this.SendPropertyChanging();
					this._id_seflab = value;
					this.SendPropertyChanged("id_seflab");
					this.Onid_seflabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buletin_Analize_Analize_Factura", Storage="_Analize_Facturas", ThisKey="id_buletin", OtherKey="id_analize")]
		public EntitySet<Analize_Factura> Analize_Facturas
		{
			get
			{
				return this._Analize_Facturas;
			}
			set
			{
				this._Analize_Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buletin_Analize_Rezultat_Analize", Storage="_Rezultat_Analizes", ThisKey="id_buletin", OtherKey="id_buletin_analize")]
		public EntitySet<Rezultat_Analize> Rezultat_Analizes
		{
			get
			{
				return this._Rezultat_Analizes;
			}
			set
			{
				this._Rezultat_Analizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Buletin_Analize", Storage="_Angajat", ThisKey="id_seflab", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajat Angajat
		{
			get
			{
				return this._Angajat.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat.Entity;
				if (((previousValue != value) 
							|| (this._Angajat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat.Entity = null;
						previousValue.Buletin_Analizes.Remove(this);
					}
					this._Angajat.Entity = value;
					if ((value != null))
					{
						value.Buletin_Analizes.Add(this);
						this._id_seflab = value.id_angajat;
					}
					else
					{
						this._id_seflab = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Buletin_Analize", Storage="_Pacient", ThisKey="id_pacient", OtherKey="id_pacient", IsForeignKey=true)]
		public Pacient Pacient
		{
			get
			{
				return this._Pacient.Entity;
			}
			set
			{
				Pacient previousValue = this._Pacient.Entity;
				if (((previousValue != value) 
							|| (this._Pacient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacient.Entity = null;
						previousValue.Buletin_Analizes.Remove(this);
					}
					this._Pacient.Entity = value;
					if ((value != null))
					{
						value.Buletin_Analizes.Add(this);
						this._id_pacient = value.id_pacient;
					}
					else
					{
						this._id_pacient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pacient");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formular_Analize_Buletin_Analize", Storage="_Formular_Analize", ThisKey="id_formular_analize", OtherKey="id_formular", IsForeignKey=true)]
		public Formular_Analize Formular_Analize
		{
			get
			{
				return this._Formular_Analize.Entity;
			}
			set
			{
				Formular_Analize previousValue = this._Formular_Analize.Entity;
				if (((previousValue != value) 
							|| (this._Formular_Analize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Formular_Analize.Entity = null;
						previousValue.Buletin_Analizes.Remove(this);
					}
					this._Formular_Analize.Entity = value;
					if ((value != null))
					{
						value.Buletin_Analizes.Add(this);
						this._id_formular_analize = value.id_formular;
					}
					else
					{
						this._id_formular_analize = default(Nullable<int>);
					}
					this.SendPropertyChanged("Formular_Analize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Analize_Facturas(Analize_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Buletin_Analize = this;
		}
		
		private void detach_Analize_Facturas(Analize_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Buletin_Analize = null;
		}
		
		private void attach_Rezultat_Analizes(Rezultat_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Buletin_Analize = this;
		}
		
		private void detach_Rezultat_Analizes(Rezultat_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Buletin_Analize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clinica")]
	public partial class Clinica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_clinica;
		
		private string _nume_clinica;
		
		private string _judet;
		
		private string _oras;
		
		private string _adresa;
		
		private string _program;
		
		private string _nr_contact;
		
		private string _email;
		
		private string _CIF;
		
		private string _IBAN;
		
		private string _Banca;
		
		private string _cale_imagine;
		
		private EntitySet<Departament> _Departaments;
		
		private EntitySet<Factura> _Facturas;
		
		private EntitySet<Functie> _Functies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_clinicaChanging(int value);
    partial void Onid_clinicaChanged();
    partial void Onnume_clinicaChanging(string value);
    partial void Onnume_clinicaChanged();
    partial void OnjudetChanging(string value);
    partial void OnjudetChanged();
    partial void OnorasChanging(string value);
    partial void OnorasChanged();
    partial void OnadresaChanging(string value);
    partial void OnadresaChanged();
    partial void OnprogramChanging(string value);
    partial void OnprogramChanged();
    partial void Onnr_contactChanging(string value);
    partial void Onnr_contactChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnCIFChanging(string value);
    partial void OnCIFChanged();
    partial void OnIBANChanging(string value);
    partial void OnIBANChanged();
    partial void OnBancaChanging(string value);
    partial void OnBancaChanged();
    partial void Oncale_imagineChanging(string value);
    partial void Oncale_imagineChanged();
    #endregion
		
		public Clinica()
		{
			this._Departaments = new EntitySet<Departament>(new Action<Departament>(this.attach_Departaments), new Action<Departament>(this.detach_Departaments));
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			this._Functies = new EntitySet<Functie>(new Action<Functie>(this.attach_Functies), new Action<Functie>(this.detach_Functies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_clinica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_clinica
		{
			get
			{
				return this._id_clinica;
			}
			set
			{
				if ((this._id_clinica != value))
				{
					this.Onid_clinicaChanging(value);
					this.SendPropertyChanging();
					this._id_clinica = value;
					this.SendPropertyChanged("id_clinica");
					this.Onid_clinicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume_clinica", DbType="VarChar(50)")]
		public string nume_clinica
		{
			get
			{
				return this._nume_clinica;
			}
			set
			{
				if ((this._nume_clinica != value))
				{
					this.Onnume_clinicaChanging(value);
					this.SendPropertyChanging();
					this._nume_clinica = value;
					this.SendPropertyChanged("nume_clinica");
					this.Onnume_clinicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_judet", DbType="VarChar(50)")]
		public string judet
		{
			get
			{
				return this._judet;
			}
			set
			{
				if ((this._judet != value))
				{
					this.OnjudetChanging(value);
					this.SendPropertyChanging();
					this._judet = value;
					this.SendPropertyChanged("judet");
					this.OnjudetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oras", DbType="VarChar(50)")]
		public string oras
		{
			get
			{
				return this._oras;
			}
			set
			{
				if ((this._oras != value))
				{
					this.OnorasChanging(value);
					this.SendPropertyChanging();
					this._oras = value;
					this.SendPropertyChanged("oras");
					this.OnorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresa", DbType="VarChar(200)")]
		public string adresa
		{
			get
			{
				return this._adresa;
			}
			set
			{
				if ((this._adresa != value))
				{
					this.OnadresaChanging(value);
					this.SendPropertyChanging();
					this._adresa = value;
					this.SendPropertyChanged("adresa");
					this.OnadresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_program", DbType="VarChar(50)")]
		public string program
		{
			get
			{
				return this._program;
			}
			set
			{
				if ((this._program != value))
				{
					this.OnprogramChanging(value);
					this.SendPropertyChanging();
					this._program = value;
					this.SendPropertyChanged("program");
					this.OnprogramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nr_contact", DbType="VarChar(11)")]
		public string nr_contact
		{
			get
			{
				return this._nr_contact;
			}
			set
			{
				if ((this._nr_contact != value))
				{
					this.Onnr_contactChanging(value);
					this.SendPropertyChanging();
					this._nr_contact = value;
					this.SendPropertyChanged("nr_contact");
					this.Onnr_contactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIF", DbType="VarChar(10)")]
		public string CIF
		{
			get
			{
				return this._CIF;
			}
			set
			{
				if ((this._CIF != value))
				{
					this.OnCIFChanging(value);
					this.SendPropertyChanging();
					this._CIF = value;
					this.SendPropertyChanged("CIF");
					this.OnCIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBAN", DbType="VarChar(30)")]
		public string IBAN
		{
			get
			{
				return this._IBAN;
			}
			set
			{
				if ((this._IBAN != value))
				{
					this.OnIBANChanging(value);
					this.SendPropertyChanging();
					this._IBAN = value;
					this.SendPropertyChanged("IBAN");
					this.OnIBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Banca", DbType="VarChar(100)")]
		public string Banca
		{
			get
			{
				return this._Banca;
			}
			set
			{
				if ((this._Banca != value))
				{
					this.OnBancaChanging(value);
					this.SendPropertyChanging();
					this._Banca = value;
					this.SendPropertyChanged("Banca");
					this.OnBancaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cale_imagine", DbType="NVarChar(255)")]
		public string cale_imagine
		{
			get
			{
				return this._cale_imagine;
			}
			set
			{
				if ((this._cale_imagine != value))
				{
					this.Oncale_imagineChanging(value);
					this.SendPropertyChanging();
					this._cale_imagine = value;
					this.SendPropertyChanged("cale_imagine");
					this.Oncale_imagineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Departament", Storage="_Departaments", ThisKey="id_clinica", OtherKey="id_clinica")]
		public EntitySet<Departament> Departaments
		{
			get
			{
				return this._Departaments;
			}
			set
			{
				this._Departaments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Factura", Storage="_Facturas", ThisKey="id_clinica", OtherKey="id_clinica")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Functie", Storage="_Functies", ThisKey="id_clinica", OtherKey="id_clinica")]
		public EntitySet<Functie> Functies
		{
			get
			{
				return this._Functies;
			}
			set
			{
				this._Functies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Departaments(Departament entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = this;
		}
		
		private void detach_Departaments(Departament entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = null;
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = null;
		}
		
		private void attach_Functies(Functie entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = this;
		}
		
		private void detach_Functies(Functie entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultatie")]
	public partial class Consultatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_consultatie;
		
		private System.Nullable<int> _id_doctor;
		
		private System.Nullable<int> _id_asistent;
		
		private System.Nullable<int> _id_pacient;
		
		private System.Nullable<System.DateTime> _data_consultatie;
		
		private string _ora;
		
		private System.Nullable<decimal> _pret;
		
		private EntitySet<Consultatii_Factura> _Consultatii_Facturas;
		
		private EntitySet<Diagnostic> _Diagnostics;
		
		private EntityRef<Angajat> _Angajat;
		
		private EntityRef<Angajat> _Angajat1;
		
		private EntityRef<Pacient> _Pacient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_consultatieChanging(int value);
    partial void Onid_consultatieChanged();
    partial void Onid_doctorChanging(System.Nullable<int> value);
    partial void Onid_doctorChanged();
    partial void Onid_asistentChanging(System.Nullable<int> value);
    partial void Onid_asistentChanged();
    partial void Onid_pacientChanging(System.Nullable<int> value);
    partial void Onid_pacientChanged();
    partial void Ondata_consultatieChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_consultatieChanged();
    partial void OnoraChanging(string value);
    partial void OnoraChanged();
    partial void OnpretChanging(System.Nullable<decimal> value);
    partial void OnpretChanged();
    #endregion
		
		public Consultatie()
		{
			this._Consultatii_Facturas = new EntitySet<Consultatii_Factura>(new Action<Consultatii_Factura>(this.attach_Consultatii_Facturas), new Action<Consultatii_Factura>(this.detach_Consultatii_Facturas));
			this._Diagnostics = new EntitySet<Diagnostic>(new Action<Diagnostic>(this.attach_Diagnostics), new Action<Diagnostic>(this.detach_Diagnostics));
			this._Angajat = default(EntityRef<Angajat>);
			this._Angajat1 = default(EntityRef<Angajat>);
			this._Pacient = default(EntityRef<Pacient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consultatie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_consultatie
		{
			get
			{
				return this._id_consultatie;
			}
			set
			{
				if ((this._id_consultatie != value))
				{
					this.Onid_consultatieChanging(value);
					this.SendPropertyChanging();
					this._id_consultatie = value;
					this.SendPropertyChanged("id_consultatie");
					this.Onid_consultatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_doctor", DbType="Int")]
		public System.Nullable<int> id_doctor
		{
			get
			{
				return this._id_doctor;
			}
			set
			{
				if ((this._id_doctor != value))
				{
					if (this._Angajat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_doctorChanging(value);
					this.SendPropertyChanging();
					this._id_doctor = value;
					this.SendPropertyChanged("id_doctor");
					this.Onid_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asistent", DbType="Int")]
		public System.Nullable<int> id_asistent
		{
			get
			{
				return this._id_asistent;
			}
			set
			{
				if ((this._id_asistent != value))
				{
					if (this._Angajat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_asistentChanging(value);
					this.SendPropertyChanging();
					this._id_asistent = value;
					this.SendPropertyChanged("id_asistent");
					this.Onid_asistentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacient", DbType="Int")]
		public System.Nullable<int> id_pacient
		{
			get
			{
				return this._id_pacient;
			}
			set
			{
				if ((this._id_pacient != value))
				{
					if (this._Pacient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacientChanging(value);
					this.SendPropertyChanging();
					this._id_pacient = value;
					this.SendPropertyChanged("id_pacient");
					this.Onid_pacientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_consultatie", DbType="Date")]
		public System.Nullable<System.DateTime> data_consultatie
		{
			get
			{
				return this._data_consultatie;
			}
			set
			{
				if ((this._data_consultatie != value))
				{
					this.Ondata_consultatieChanging(value);
					this.SendPropertyChanging();
					this._data_consultatie = value;
					this.SendPropertyChanged("data_consultatie");
					this.Ondata_consultatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ora", DbType="VarChar(6)")]
		public string ora
		{
			get
			{
				return this._ora;
			}
			set
			{
				if ((this._ora != value))
				{
					this.OnoraChanging(value);
					this.SendPropertyChanging();
					this._ora = value;
					this.SendPropertyChanged("ora");
					this.OnoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pret", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> pret
		{
			get
			{
				return this._pret;
			}
			set
			{
				if ((this._pret != value))
				{
					this.OnpretChanging(value);
					this.SendPropertyChanging();
					this._pret = value;
					this.SendPropertyChanged("pret");
					this.OnpretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultatie_Consultatii_Factura", Storage="_Consultatii_Facturas", ThisKey="id_consultatie", OtherKey="id_consultatie")]
		public EntitySet<Consultatii_Factura> Consultatii_Facturas
		{
			get
			{
				return this._Consultatii_Facturas;
			}
			set
			{
				this._Consultatii_Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultatie_Diagnostic", Storage="_Diagnostics", ThisKey="id_consultatie", OtherKey="id_consultatie")]
		public EntitySet<Diagnostic> Diagnostics
		{
			get
			{
				return this._Diagnostics;
			}
			set
			{
				this._Diagnostics.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Consultatie", Storage="_Angajat", ThisKey="id_asistent", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajat Angajat
		{
			get
			{
				return this._Angajat.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat.Entity;
				if (((previousValue != value) 
							|| (this._Angajat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat.Entity = null;
						previousValue.Consultaties.Remove(this);
					}
					this._Angajat.Entity = value;
					if ((value != null))
					{
						value.Consultaties.Add(this);
						this._id_asistent = value.id_angajat;
					}
					else
					{
						this._id_asistent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Consultatie1", Storage="_Angajat1", ThisKey="id_doctor", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajat Angajat1
		{
			get
			{
				return this._Angajat1.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat1.Entity;
				if (((previousValue != value) 
							|| (this._Angajat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat1.Entity = null;
						previousValue.Consultaties1.Remove(this);
					}
					this._Angajat1.Entity = value;
					if ((value != null))
					{
						value.Consultaties1.Add(this);
						this._id_doctor = value.id_angajat;
					}
					else
					{
						this._id_doctor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajat1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Consultatie", Storage="_Pacient", ThisKey="id_pacient", OtherKey="id_pacient", IsForeignKey=true)]
		public Pacient Pacient
		{
			get
			{
				return this._Pacient.Entity;
			}
			set
			{
				Pacient previousValue = this._Pacient.Entity;
				if (((previousValue != value) 
							|| (this._Pacient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacient.Entity = null;
						previousValue.Consultaties.Remove(this);
					}
					this._Pacient.Entity = value;
					if ((value != null))
					{
						value.Consultaties.Add(this);
						this._id_pacient = value.id_pacient;
					}
					else
					{
						this._id_pacient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pacient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consultatii_Facturas(Consultatii_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Consultatie = this;
		}
		
		private void detach_Consultatii_Facturas(Consultatii_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Consultatie = null;
		}
		
		private void attach_Diagnostics(Diagnostic entity)
		{
			this.SendPropertyChanging();
			entity.Consultatie = this;
		}
		
		private void detach_Diagnostics(Diagnostic entity)
		{
			this.SendPropertyChanging();
			entity.Consultatie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consultatii_Factura")]
	public partial class Consultatii_Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_serviciu;
		
		private System.Nullable<int> _id_factura;
		
		private System.Nullable<int> _id_consultatie;
		
		private EntityRef<Consultatie> _Consultatie;
		
		private EntityRef<Factura> _Factura;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_serviciuChanging(int value);
    partial void Onid_serviciuChanged();
    partial void Onid_facturaChanging(System.Nullable<int> value);
    partial void Onid_facturaChanged();
    partial void Onid_consultatieChanging(System.Nullable<int> value);
    partial void Onid_consultatieChanged();
    #endregion
		
		public Consultatii_Factura()
		{
			this._Consultatie = default(EntityRef<Consultatie>);
			this._Factura = default(EntityRef<Factura>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_serviciu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_serviciu
		{
			get
			{
				return this._id_serviciu;
			}
			set
			{
				if ((this._id_serviciu != value))
				{
					this.Onid_serviciuChanging(value);
					this.SendPropertyChanging();
					this._id_serviciu = value;
					this.SendPropertyChanged("id_serviciu");
					this.Onid_serviciuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_factura", DbType="Int")]
		public System.Nullable<int> id_factura
		{
			get
			{
				return this._id_factura;
			}
			set
			{
				if ((this._id_factura != value))
				{
					if (this._Factura.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_facturaChanging(value);
					this.SendPropertyChanging();
					this._id_factura = value;
					this.SendPropertyChanged("id_factura");
					this.Onid_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consultatie", DbType="Int")]
		public System.Nullable<int> id_consultatie
		{
			get
			{
				return this._id_consultatie;
			}
			set
			{
				if ((this._id_consultatie != value))
				{
					if (this._Consultatie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_consultatieChanging(value);
					this.SendPropertyChanging();
					this._id_consultatie = value;
					this.SendPropertyChanged("id_consultatie");
					this.Onid_consultatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultatie_Consultatii_Factura", Storage="_Consultatie", ThisKey="id_consultatie", OtherKey="id_consultatie", IsForeignKey=true)]
		public Consultatie Consultatie
		{
			get
			{
				return this._Consultatie.Entity;
			}
			set
			{
				Consultatie previousValue = this._Consultatie.Entity;
				if (((previousValue != value) 
							|| (this._Consultatie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultatie.Entity = null;
						previousValue.Consultatii_Facturas.Remove(this);
					}
					this._Consultatie.Entity = value;
					if ((value != null))
					{
						value.Consultatii_Facturas.Add(this);
						this._id_consultatie = value.id_consultatie;
					}
					else
					{
						this._id_consultatie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Consultatie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Consultatii_Factura", Storage="_Factura", ThisKey="id_factura", OtherKey="id_factura", IsForeignKey=true)]
		public Factura Factura
		{
			get
			{
				return this._Factura.Entity;
			}
			set
			{
				Factura previousValue = this._Factura.Entity;
				if (((previousValue != value) 
							|| (this._Factura.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factura.Entity = null;
						previousValue.Consultatii_Facturas.Remove(this);
					}
					this._Factura.Entity = value;
					if ((value != null))
					{
						value.Consultatii_Facturas.Add(this);
						this._id_factura = value.id_factura;
					}
					else
					{
						this._id_factura = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factura");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departament")]
	public partial class Departament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_departament;
		
		private System.Nullable<int> _id_clinica;
		
		private string _denumire;
		
		private EntitySet<Incadrare_Departament> _Incadrare_Departaments;
		
		private EntityRef<Clinica> _Clinica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_departamentChanging(int value);
    partial void Onid_departamentChanged();
    partial void Onid_clinicaChanging(System.Nullable<int> value);
    partial void Onid_clinicaChanged();
    partial void OndenumireChanging(string value);
    partial void OndenumireChanged();
    #endregion
		
		public Departament()
		{
			this._Incadrare_Departaments = new EntitySet<Incadrare_Departament>(new Action<Incadrare_Departament>(this.attach_Incadrare_Departaments), new Action<Incadrare_Departament>(this.detach_Incadrare_Departaments));
			this._Clinica = default(EntityRef<Clinica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departament", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_departament
		{
			get
			{
				return this._id_departament;
			}
			set
			{
				if ((this._id_departament != value))
				{
					this.Onid_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_departament = value;
					this.SendPropertyChanged("id_departament");
					this.Onid_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_clinica", DbType="Int")]
		public System.Nullable<int> id_clinica
		{
			get
			{
				return this._id_clinica;
			}
			set
			{
				if ((this._id_clinica != value))
				{
					if (this._Clinica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clinicaChanging(value);
					this.SendPropertyChanging();
					this._id_clinica = value;
					this.SendPropertyChanged("id_clinica");
					this.Onid_clinicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_denumire", DbType="VarChar(200)")]
		public string denumire
		{
			get
			{
				return this._denumire;
			}
			set
			{
				if ((this._denumire != value))
				{
					this.OndenumireChanging(value);
					this.SendPropertyChanging();
					this._denumire = value;
					this.SendPropertyChanged("denumire");
					this.OndenumireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departament_Incadrare_Departament", Storage="_Incadrare_Departaments", ThisKey="id_departament", OtherKey="id_departament")]
		public EntitySet<Incadrare_Departament> Incadrare_Departaments
		{
			get
			{
				return this._Incadrare_Departaments;
			}
			set
			{
				this._Incadrare_Departaments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Departament", Storage="_Clinica", ThisKey="id_clinica", OtherKey="id_clinica", IsForeignKey=true)]
		public Clinica Clinica
		{
			get
			{
				return this._Clinica.Entity;
			}
			set
			{
				Clinica previousValue = this._Clinica.Entity;
				if (((previousValue != value) 
							|| (this._Clinica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clinica.Entity = null;
						previousValue.Departaments.Remove(this);
					}
					this._Clinica.Entity = value;
					if ((value != null))
					{
						value.Departaments.Add(this);
						this._id_clinica = value.id_clinica;
					}
					else
					{
						this._id_clinica = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clinica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Incadrare_Departaments(Incadrare_Departament entity)
		{
			this.SendPropertyChanging();
			entity.Departament = this;
		}
		
		private void detach_Incadrare_Departaments(Incadrare_Departament entity)
		{
			this.SendPropertyChanging();
			entity.Departament = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diagnostic")]
	public partial class Diagnostic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_diagnostic;
		
		private System.Nullable<int> _id_consultatie;
		
		private string _diagnostic1;
		
		private string _observatii;
		
		private string _tratament;
		
		private EntityRef<Consultatie> _Consultatie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_diagnosticChanging(int value);
    partial void Onid_diagnosticChanged();
    partial void Onid_consultatieChanging(System.Nullable<int> value);
    partial void Onid_consultatieChanged();
    partial void Ondiagnostic1Changing(string value);
    partial void Ondiagnostic1Changed();
    partial void OnobservatiiChanging(string value);
    partial void OnobservatiiChanged();
    partial void OntratamentChanging(string value);
    partial void OntratamentChanged();
    #endregion
		
		public Diagnostic()
		{
			this._Consultatie = default(EntityRef<Consultatie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_diagnostic", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_diagnostic
		{
			get
			{
				return this._id_diagnostic;
			}
			set
			{
				if ((this._id_diagnostic != value))
				{
					this.Onid_diagnosticChanging(value);
					this.SendPropertyChanging();
					this._id_diagnostic = value;
					this.SendPropertyChanged("id_diagnostic");
					this.Onid_diagnosticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consultatie", DbType="Int")]
		public System.Nullable<int> id_consultatie
		{
			get
			{
				return this._id_consultatie;
			}
			set
			{
				if ((this._id_consultatie != value))
				{
					if (this._Consultatie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_consultatieChanging(value);
					this.SendPropertyChanging();
					this._id_consultatie = value;
					this.SendPropertyChanged("id_consultatie");
					this.Onid_consultatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diagnostic", Storage="_diagnostic1", DbType="VarChar(2000)")]
		public string diagnostic1
		{
			get
			{
				return this._diagnostic1;
			}
			set
			{
				if ((this._diagnostic1 != value))
				{
					this.Ondiagnostic1Changing(value);
					this.SendPropertyChanging();
					this._diagnostic1 = value;
					this.SendPropertyChanged("diagnostic1");
					this.Ondiagnostic1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observatii", DbType="VarChar(2000)")]
		public string observatii
		{
			get
			{
				return this._observatii;
			}
			set
			{
				if ((this._observatii != value))
				{
					this.OnobservatiiChanging(value);
					this.SendPropertyChanging();
					this._observatii = value;
					this.SendPropertyChanged("observatii");
					this.OnobservatiiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tratament", DbType="VarChar(1000)")]
		public string tratament
		{
			get
			{
				return this._tratament;
			}
			set
			{
				if ((this._tratament != value))
				{
					this.OntratamentChanging(value);
					this.SendPropertyChanging();
					this._tratament = value;
					this.SendPropertyChanged("tratament");
					this.OntratamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consultatie_Diagnostic", Storage="_Consultatie", ThisKey="id_consultatie", OtherKey="id_consultatie", IsForeignKey=true)]
		public Consultatie Consultatie
		{
			get
			{
				return this._Consultatie.Entity;
			}
			set
			{
				Consultatie previousValue = this._Consultatie.Entity;
				if (((previousValue != value) 
							|| (this._Consultatie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consultatie.Entity = null;
						previousValue.Diagnostics.Remove(this);
					}
					this._Consultatie.Entity = value;
					if ((value != null))
					{
						value.Diagnostics.Add(this);
						this._id_consultatie = value.id_consultatie;
					}
					else
					{
						this._id_consultatie = default(Nullable<int>);
					}
					this.SendPropertyChanged("Consultatie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factura")]
	public partial class Factura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_factura;
		
		private System.Nullable<int> _id_pacient;
		
		private System.Nullable<int> _id_clinica;
		
		private string _modalitate_plata;
		
		private EntitySet<Analize_Factura> _Analize_Facturas;
		
		private EntitySet<Consultatii_Factura> _Consultatii_Facturas;
		
		private EntityRef<Clinica> _Clinica;
		
		private EntityRef<Pacient> _Pacient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_facturaChanging(int value);
    partial void Onid_facturaChanged();
    partial void Onid_pacientChanging(System.Nullable<int> value);
    partial void Onid_pacientChanged();
    partial void Onid_clinicaChanging(System.Nullable<int> value);
    partial void Onid_clinicaChanged();
    partial void Onmodalitate_plataChanging(string value);
    partial void Onmodalitate_plataChanged();
    #endregion
		
		public Factura()
		{
			this._Analize_Facturas = new EntitySet<Analize_Factura>(new Action<Analize_Factura>(this.attach_Analize_Facturas), new Action<Analize_Factura>(this.detach_Analize_Facturas));
			this._Consultatii_Facturas = new EntitySet<Consultatii_Factura>(new Action<Consultatii_Factura>(this.attach_Consultatii_Facturas), new Action<Consultatii_Factura>(this.detach_Consultatii_Facturas));
			this._Clinica = default(EntityRef<Clinica>);
			this._Pacient = default(EntityRef<Pacient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_factura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_factura
		{
			get
			{
				return this._id_factura;
			}
			set
			{
				if ((this._id_factura != value))
				{
					this.Onid_facturaChanging(value);
					this.SendPropertyChanging();
					this._id_factura = value;
					this.SendPropertyChanged("id_factura");
					this.Onid_facturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacient", DbType="Int")]
		public System.Nullable<int> id_pacient
		{
			get
			{
				return this._id_pacient;
			}
			set
			{
				if ((this._id_pacient != value))
				{
					if (this._Pacient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pacientChanging(value);
					this.SendPropertyChanging();
					this._id_pacient = value;
					this.SendPropertyChanged("id_pacient");
					this.Onid_pacientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_clinica", DbType="Int")]
		public System.Nullable<int> id_clinica
		{
			get
			{
				return this._id_clinica;
			}
			set
			{
				if ((this._id_clinica != value))
				{
					if (this._Clinica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clinicaChanging(value);
					this.SendPropertyChanging();
					this._id_clinica = value;
					this.SendPropertyChanged("id_clinica");
					this.Onid_clinicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modalitate_plata", DbType="VarChar(20)")]
		public string modalitate_plata
		{
			get
			{
				return this._modalitate_plata;
			}
			set
			{
				if ((this._modalitate_plata != value))
				{
					this.Onmodalitate_plataChanging(value);
					this.SendPropertyChanging();
					this._modalitate_plata = value;
					this.SendPropertyChanged("modalitate_plata");
					this.Onmodalitate_plataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Analize_Factura", Storage="_Analize_Facturas", ThisKey="id_factura", OtherKey="id_factura")]
		public EntitySet<Analize_Factura> Analize_Facturas
		{
			get
			{
				return this._Analize_Facturas;
			}
			set
			{
				this._Analize_Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factura_Consultatii_Factura", Storage="_Consultatii_Facturas", ThisKey="id_factura", OtherKey="id_factura")]
		public EntitySet<Consultatii_Factura> Consultatii_Facturas
		{
			get
			{
				return this._Consultatii_Facturas;
			}
			set
			{
				this._Consultatii_Facturas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Factura", Storage="_Clinica", ThisKey="id_clinica", OtherKey="id_clinica", IsForeignKey=true)]
		public Clinica Clinica
		{
			get
			{
				return this._Clinica.Entity;
			}
			set
			{
				Clinica previousValue = this._Clinica.Entity;
				if (((previousValue != value) 
							|| (this._Clinica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clinica.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Clinica.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._id_clinica = value.id_clinica;
					}
					else
					{
						this._id_clinica = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clinica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Factura", Storage="_Pacient", ThisKey="id_pacient", OtherKey="id_pacient", IsForeignKey=true)]
		public Pacient Pacient
		{
			get
			{
				return this._Pacient.Entity;
			}
			set
			{
				Pacient previousValue = this._Pacient.Entity;
				if (((previousValue != value) 
							|| (this._Pacient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacient.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Pacient.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._id_pacient = value.id_pacient;
					}
					else
					{
						this._id_pacient = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pacient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Analize_Facturas(Analize_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Analize_Facturas(Analize_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
		
		private void attach_Consultatii_Facturas(Consultatii_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Factura = this;
		}
		
		private void detach_Consultatii_Facturas(Consultatii_Factura entity)
		{
			this.SendPropertyChanging();
			entity.Factura = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Functie")]
	public partial class Functie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_functie;
		
		private System.Nullable<int> _id_angajat;
		
		private System.Nullable<int> _id_clinica;
		
		private string _nume_functie;
		
		private System.Nullable<System.DateTime> _data_incadrare;
		
		private System.Nullable<System.DateTime> _data_expirare_contract;
		
		private EntityRef<Angajat> _Angajat;
		
		private EntityRef<Clinica> _Clinica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_functieChanging(int value);
    partial void Onid_functieChanged();
    partial void Onid_angajatChanging(System.Nullable<int> value);
    partial void Onid_angajatChanged();
    partial void Onid_clinicaChanging(System.Nullable<int> value);
    partial void Onid_clinicaChanged();
    partial void Onnume_functieChanging(string value);
    partial void Onnume_functieChanged();
    partial void Ondata_incadrareChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_incadrareChanged();
    partial void Ondata_expirare_contractChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_expirare_contractChanged();
    #endregion
		
		public Functie()
		{
			this._Angajat = default(EntityRef<Angajat>);
			this._Clinica = default(EntityRef<Clinica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_functie", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_functie
		{
			get
			{
				return this._id_functie;
			}
			set
			{
				if ((this._id_functie != value))
				{
					this.Onid_functieChanging(value);
					this.SendPropertyChanging();
					this._id_functie = value;
					this.SendPropertyChanged("id_functie");
					this.Onid_functieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat", DbType="Int")]
		public System.Nullable<int> id_angajat
		{
			get
			{
				return this._id_angajat;
			}
			set
			{
				if ((this._id_angajat != value))
				{
					if (this._Angajat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_angajatChanging(value);
					this.SendPropertyChanging();
					this._id_angajat = value;
					this.SendPropertyChanged("id_angajat");
					this.Onid_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_clinica", DbType="Int")]
		public System.Nullable<int> id_clinica
		{
			get
			{
				return this._id_clinica;
			}
			set
			{
				if ((this._id_clinica != value))
				{
					if (this._Clinica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clinicaChanging(value);
					this.SendPropertyChanging();
					this._id_clinica = value;
					this.SendPropertyChanged("id_clinica");
					this.Onid_clinicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume_functie", DbType="VarChar(40)")]
		public string nume_functie
		{
			get
			{
				return this._nume_functie;
			}
			set
			{
				if ((this._nume_functie != value))
				{
					this.Onnume_functieChanging(value);
					this.SendPropertyChanging();
					this._nume_functie = value;
					this.SendPropertyChanged("nume_functie");
					this.Onnume_functieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_incadrare", DbType="Date")]
		public System.Nullable<System.DateTime> data_incadrare
		{
			get
			{
				return this._data_incadrare;
			}
			set
			{
				if ((this._data_incadrare != value))
				{
					this.Ondata_incadrareChanging(value);
					this.SendPropertyChanging();
					this._data_incadrare = value;
					this.SendPropertyChanged("data_incadrare");
					this.Ondata_incadrareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_expirare_contract", DbType="Date")]
		public System.Nullable<System.DateTime> data_expirare_contract
		{
			get
			{
				return this._data_expirare_contract;
			}
			set
			{
				if ((this._data_expirare_contract != value))
				{
					this.Ondata_expirare_contractChanging(value);
					this.SendPropertyChanging();
					this._data_expirare_contract = value;
					this.SendPropertyChanged("data_expirare_contract");
					this.Ondata_expirare_contractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Functie", Storage="_Angajat", ThisKey="id_angajat", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajat Angajat
		{
			get
			{
				return this._Angajat.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat.Entity;
				if (((previousValue != value) 
							|| (this._Angajat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat.Entity = null;
						previousValue.Functies.Remove(this);
					}
					this._Angajat.Entity = value;
					if ((value != null))
					{
						value.Functies.Add(this);
						this._id_angajat = value.id_angajat;
					}
					else
					{
						this._id_angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Functie", Storage="_Clinica", ThisKey="id_clinica", OtherKey="id_clinica", IsForeignKey=true)]
		public Clinica Clinica
		{
			get
			{
				return this._Clinica.Entity;
			}
			set
			{
				Clinica previousValue = this._Clinica.Entity;
				if (((previousValue != value) 
							|| (this._Clinica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clinica.Entity = null;
						previousValue.Functies.Remove(this);
					}
					this._Clinica.Entity = value;
					if ((value != null))
					{
						value.Functies.Add(this);
						this._id_clinica = value.id_clinica;
					}
					else
					{
						this._id_clinica = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clinica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Incadrare_Departament")]
	public partial class Incadrare_Departament : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_incadrare;
		
		private System.Nullable<int> _id_departament;
		
		private System.Nullable<int> _id_angajat;
		
		private string _intrare_tura;
		
		private string _iesire_tura;
		
		private EntityRef<Angajat> _Angajat;
		
		private EntityRef<Departament> _Departament;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_incadrareChanging(int value);
    partial void Onid_incadrareChanged();
    partial void Onid_departamentChanging(System.Nullable<int> value);
    partial void Onid_departamentChanged();
    partial void Onid_angajatChanging(System.Nullable<int> value);
    partial void Onid_angajatChanged();
    partial void Onintrare_turaChanging(string value);
    partial void Onintrare_turaChanged();
    partial void Oniesire_turaChanging(string value);
    partial void Oniesire_turaChanged();
    #endregion
		
		public Incadrare_Departament()
		{
			this._Angajat = default(EntityRef<Angajat>);
			this._Departament = default(EntityRef<Departament>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_incadrare", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_incadrare
		{
			get
			{
				return this._id_incadrare;
			}
			set
			{
				if ((this._id_incadrare != value))
				{
					this.Onid_incadrareChanging(value);
					this.SendPropertyChanging();
					this._id_incadrare = value;
					this.SendPropertyChanged("id_incadrare");
					this.Onid_incadrareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_departament", DbType="Int")]
		public System.Nullable<int> id_departament
		{
			get
			{
				return this._id_departament;
			}
			set
			{
				if ((this._id_departament != value))
				{
					if (this._Departament.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_departamentChanging(value);
					this.SendPropertyChanging();
					this._id_departament = value;
					this.SendPropertyChanged("id_departament");
					this.Onid_departamentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_angajat", DbType="Int")]
		public System.Nullable<int> id_angajat
		{
			get
			{
				return this._id_angajat;
			}
			set
			{
				if ((this._id_angajat != value))
				{
					if (this._Angajat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_angajatChanging(value);
					this.SendPropertyChanging();
					this._id_angajat = value;
					this.SendPropertyChanged("id_angajat");
					this.Onid_angajatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intrare_tura", DbType="VarChar(6)")]
		public string intrare_tura
		{
			get
			{
				return this._intrare_tura;
			}
			set
			{
				if ((this._intrare_tura != value))
				{
					this.Onintrare_turaChanging(value);
					this.SendPropertyChanging();
					this._intrare_tura = value;
					this.SendPropertyChanged("intrare_tura");
					this.Onintrare_turaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iesire_tura", DbType="VarChar(6)")]
		public string iesire_tura
		{
			get
			{
				return this._iesire_tura;
			}
			set
			{
				if ((this._iesire_tura != value))
				{
					this.Oniesire_turaChanging(value);
					this.SendPropertyChanging();
					this._iesire_tura = value;
					this.SendPropertyChanged("iesire_tura");
					this.Oniesire_turaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Angajat_Incadrare_Departament", Storage="_Angajat", ThisKey="id_angajat", OtherKey="id_angajat", IsForeignKey=true)]
		public Angajat Angajat
		{
			get
			{
				return this._Angajat.Entity;
			}
			set
			{
				Angajat previousValue = this._Angajat.Entity;
				if (((previousValue != value) 
							|| (this._Angajat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Angajat.Entity = null;
						previousValue.Incadrare_Departaments.Remove(this);
					}
					this._Angajat.Entity = value;
					if ((value != null))
					{
						value.Incadrare_Departaments.Add(this);
						this._id_angajat = value.id_angajat;
					}
					else
					{
						this._id_angajat = default(Nullable<int>);
					}
					this.SendPropertyChanged("Angajat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departament_Incadrare_Departament", Storage="_Departament", ThisKey="id_departament", OtherKey="id_departament", IsForeignKey=true)]
		public Departament Departament
		{
			get
			{
				return this._Departament.Entity;
			}
			set
			{
				Departament previousValue = this._Departament.Entity;
				if (((previousValue != value) 
							|| (this._Departament.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departament.Entity = null;
						previousValue.Incadrare_Departaments.Remove(this);
					}
					this._Departament.Entity = value;
					if ((value != null))
					{
						value.Incadrare_Departaments.Add(this);
						this._id_departament = value.id_departament;
					}
					else
					{
						this._id_departament = default(Nullable<int>);
					}
					this.SendPropertyChanged("Departament");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacient")]
	public partial class Pacient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pacient;
		
		private string _nume;
		
		private string _prenume;
		
		private string _judet;
		
		private string _adresa;
		
		private EntitySet<Asigurare> _Asigurares;
		
		private EntitySet<Buletin_Analize> _Buletin_Analizes;
		
		private EntitySet<Consultatie> _Consultaties;
		
		private EntitySet<Factura> _Facturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_pacientChanging(int value);
    partial void Onid_pacientChanged();
    partial void OnnumeChanging(string value);
    partial void OnnumeChanged();
    partial void OnprenumeChanging(string value);
    partial void OnprenumeChanged();
    partial void OnjudetChanging(string value);
    partial void OnjudetChanged();
    partial void OnadresaChanging(string value);
    partial void OnadresaChanged();
    #endregion
		
		public Pacient()
		{
			this._Asigurares = new EntitySet<Asigurare>(new Action<Asigurare>(this.attach_Asigurares), new Action<Asigurare>(this.detach_Asigurares));
			this._Buletin_Analizes = new EntitySet<Buletin_Analize>(new Action<Buletin_Analize>(this.attach_Buletin_Analizes), new Action<Buletin_Analize>(this.detach_Buletin_Analizes));
			this._Consultaties = new EntitySet<Consultatie>(new Action<Consultatie>(this.attach_Consultaties), new Action<Consultatie>(this.detach_Consultaties));
			this._Facturas = new EntitySet<Factura>(new Action<Factura>(this.attach_Facturas), new Action<Factura>(this.detach_Facturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pacient", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_pacient
		{
			get
			{
				return this._id_pacient;
			}
			set
			{
				if ((this._id_pacient != value))
				{
					this.Onid_pacientChanging(value);
					this.SendPropertyChanging();
					this._id_pacient = value;
					this.SendPropertyChanged("id_pacient");
					this.Onid_pacientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume", DbType="VarChar(50)")]
		public string nume
		{
			get
			{
				return this._nume;
			}
			set
			{
				if ((this._nume != value))
				{
					this.OnnumeChanging(value);
					this.SendPropertyChanging();
					this._nume = value;
					this.SendPropertyChanged("nume");
					this.OnnumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenume", DbType="VarChar(50)")]
		public string prenume
		{
			get
			{
				return this._prenume;
			}
			set
			{
				if ((this._prenume != value))
				{
					this.OnprenumeChanging(value);
					this.SendPropertyChanging();
					this._prenume = value;
					this.SendPropertyChanged("prenume");
					this.OnprenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_judet", DbType="VarChar(20)")]
		public string judet
		{
			get
			{
				return this._judet;
			}
			set
			{
				if ((this._judet != value))
				{
					this.OnjudetChanging(value);
					this.SendPropertyChanging();
					this._judet = value;
					this.SendPropertyChanged("judet");
					this.OnjudetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresa", DbType="VarChar(100)")]
		public string adresa
		{
			get
			{
				return this._adresa;
			}
			set
			{
				if ((this._adresa != value))
				{
					this.OnadresaChanging(value);
					this.SendPropertyChanging();
					this._adresa = value;
					this.SendPropertyChanged("adresa");
					this.OnadresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Asigurare", Storage="_Asigurares", ThisKey="id_pacient", OtherKey="id_pacient")]
		public EntitySet<Asigurare> Asigurares
		{
			get
			{
				return this._Asigurares;
			}
			set
			{
				this._Asigurares.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Buletin_Analize", Storage="_Buletin_Analizes", ThisKey="id_pacient", OtherKey="id_pacient")]
		public EntitySet<Buletin_Analize> Buletin_Analizes
		{
			get
			{
				return this._Buletin_Analizes;
			}
			set
			{
				this._Buletin_Analizes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Consultatie", Storage="_Consultaties", ThisKey="id_pacient", OtherKey="id_pacient")]
		public EntitySet<Consultatie> Consultaties
		{
			get
			{
				return this._Consultaties;
			}
			set
			{
				this._Consultaties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacient_Factura", Storage="_Facturas", ThisKey="id_pacient", OtherKey="id_pacient")]
		public EntitySet<Factura> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asigurares(Asigurare entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = this;
		}
		
		private void detach_Asigurares(Asigurare entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = null;
		}
		
		private void attach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = this;
		}
		
		private void detach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = null;
		}
		
		private void attach_Consultaties(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = this;
		}
		
		private void detach_Consultaties(Consultatie entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = null;
		}
		
		private void attach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = this;
		}
		
		private void detach_Facturas(Factura entity)
		{
			this.SendPropertyChanging();
			entity.Pacient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rezultat_Analize")]
	public partial class Rezultat_Analize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rezultat;
		
		private System.Nullable<int> _id_buletin_analize;
		
		private System.Nullable<int> _id_analiza;
		
		private string _valori_rezultate;
		
		private EntityRef<Analize> _Analize;
		
		private EntityRef<Buletin_Analize> _Buletin_Analize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rezultatChanging(int value);
    partial void Onid_rezultatChanged();
    partial void Onid_buletin_analizeChanging(System.Nullable<int> value);
    partial void Onid_buletin_analizeChanged();
    partial void Onid_analizaChanging(System.Nullable<int> value);
    partial void Onid_analizaChanged();
    partial void Onvalori_rezultateChanging(string value);
    partial void Onvalori_rezultateChanged();
    #endregion
		
		public Rezultat_Analize()
		{
			this._Analize = default(EntityRef<Analize>);
			this._Buletin_Analize = default(EntityRef<Buletin_Analize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rezultat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rezultat
		{
			get
			{
				return this._id_rezultat;
			}
			set
			{
				if ((this._id_rezultat != value))
				{
					this.Onid_rezultatChanging(value);
					this.SendPropertyChanging();
					this._id_rezultat = value;
					this.SendPropertyChanged("id_rezultat");
					this.Onid_rezultatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_buletin_analize", DbType="Int")]
		public System.Nullable<int> id_buletin_analize
		{
			get
			{
				return this._id_buletin_analize;
			}
			set
			{
				if ((this._id_buletin_analize != value))
				{
					if (this._Buletin_Analize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_buletin_analizeChanging(value);
					this.SendPropertyChanging();
					this._id_buletin_analize = value;
					this.SendPropertyChanged("id_buletin_analize");
					this.Onid_buletin_analizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_analiza", DbType="Int")]
		public System.Nullable<int> id_analiza
		{
			get
			{
				return this._id_analiza;
			}
			set
			{
				if ((this._id_analiza != value))
				{
					if (this._Analize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_analizaChanging(value);
					this.SendPropertyChanging();
					this._id_analiza = value;
					this.SendPropertyChanged("id_analiza");
					this.Onid_analizaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valori_rezultate", DbType="VarChar(50)")]
		public string valori_rezultate
		{
			get
			{
				return this._valori_rezultate;
			}
			set
			{
				if ((this._valori_rezultate != value))
				{
					this.Onvalori_rezultateChanging(value);
					this.SendPropertyChanging();
					this._valori_rezultate = value;
					this.SendPropertyChanged("valori_rezultate");
					this.Onvalori_rezultateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Analize_Rezultat_Analize", Storage="_Analize", ThisKey="id_analiza", OtherKey="id_analiza", IsForeignKey=true)]
		public Analize Analize
		{
			get
			{
				return this._Analize.Entity;
			}
			set
			{
				Analize previousValue = this._Analize.Entity;
				if (((previousValue != value) 
							|| (this._Analize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Analize.Entity = null;
						previousValue.Rezultat_Analizes.Remove(this);
					}
					this._Analize.Entity = value;
					if ((value != null))
					{
						value.Rezultat_Analizes.Add(this);
						this._id_analiza = value.id_analiza;
					}
					else
					{
						this._id_analiza = default(Nullable<int>);
					}
					this.SendPropertyChanged("Analize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Buletin_Analize_Rezultat_Analize", Storage="_Buletin_Analize", ThisKey="id_buletin_analize", OtherKey="id_buletin", IsForeignKey=true)]
		public Buletin_Analize Buletin_Analize
		{
			get
			{
				return this._Buletin_Analize.Entity;
			}
			set
			{
				Buletin_Analize previousValue = this._Buletin_Analize.Entity;
				if (((previousValue != value) 
							|| (this._Buletin_Analize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Buletin_Analize.Entity = null;
						previousValue.Rezultat_Analizes.Remove(this);
					}
					this._Buletin_Analize.Entity = value;
					if ((value != null))
					{
						value.Rezultat_Analizes.Add(this);
						this._id_buletin_analize = value.id_buletin;
					}
					else
					{
						this._id_buletin_analize = default(Nullable<int>);
					}
					this.SendPropertyChanged("Buletin_Analize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Formular_Analize")]
	public partial class Formular_Analize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_formular;
		
		private string _tip_analize;
		
		private System.Nullable<decimal> _pret;
		
		private string _decontabile;
		
		private string _nume_formular;
		
		private string _cale_imagine;
		
		private EntitySet<Buletin_Analize> _Buletin_Analizes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_formularChanging(int value);
    partial void Onid_formularChanged();
    partial void Ontip_analizeChanging(string value);
    partial void Ontip_analizeChanged();
    partial void OnpretChanging(System.Nullable<decimal> value);
    partial void OnpretChanged();
    partial void OndecontabileChanging(string value);
    partial void OndecontabileChanged();
    partial void Onnume_formularChanging(string value);
    partial void Onnume_formularChanged();
    partial void Oncale_imagineChanging(string value);
    partial void Oncale_imagineChanged();
    #endregion
		
		public Formular_Analize()
		{
			this._Buletin_Analizes = new EntitySet<Buletin_Analize>(new Action<Buletin_Analize>(this.attach_Buletin_Analizes), new Action<Buletin_Analize>(this.detach_Buletin_Analizes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_formular", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_formular
		{
			get
			{
				return this._id_formular;
			}
			set
			{
				if ((this._id_formular != value))
				{
					this.Onid_formularChanging(value);
					this.SendPropertyChanging();
					this._id_formular = value;
					this.SendPropertyChanged("id_formular");
					this.Onid_formularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip_analize", DbType="VarChar(40)")]
		public string tip_analize
		{
			get
			{
				return this._tip_analize;
			}
			set
			{
				if ((this._tip_analize != value))
				{
					this.Ontip_analizeChanging(value);
					this.SendPropertyChanging();
					this._tip_analize = value;
					this.SendPropertyChanged("tip_analize");
					this.Ontip_analizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pret", DbType="Decimal(7,2)")]
		public System.Nullable<decimal> pret
		{
			get
			{
				return this._pret;
			}
			set
			{
				if ((this._pret != value))
				{
					this.OnpretChanging(value);
					this.SendPropertyChanging();
					this._pret = value;
					this.SendPropertyChanged("pret");
					this.OnpretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decontabile", DbType="VarChar(10)")]
		public string decontabile
		{
			get
			{
				return this._decontabile;
			}
			set
			{
				if ((this._decontabile != value))
				{
					this.OndecontabileChanging(value);
					this.SendPropertyChanging();
					this._decontabile = value;
					this.SendPropertyChanged("decontabile");
					this.OndecontabileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nume_formular", DbType="VarChar(100)")]
		public string nume_formular
		{
			get
			{
				return this._nume_formular;
			}
			set
			{
				if ((this._nume_formular != value))
				{
					this.Onnume_formularChanging(value);
					this.SendPropertyChanging();
					this._nume_formular = value;
					this.SendPropertyChanged("nume_formular");
					this.Onnume_formularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cale_imagine", DbType="VarChar(255)")]
		public string cale_imagine
		{
			get
			{
				return this._cale_imagine;
			}
			set
			{
				if ((this._cale_imagine != value))
				{
					this.Oncale_imagineChanging(value);
					this.SendPropertyChanging();
					this._cale_imagine = value;
					this.SendPropertyChanged("cale_imagine");
					this.Oncale_imagineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Formular_Analize_Buletin_Analize", Storage="_Buletin_Analizes", ThisKey="id_formular", OtherKey="id_formular_analize")]
		public EntitySet<Buletin_Analize> Buletin_Analizes
		{
			get
			{
				return this._Buletin_Analizes;
			}
			set
			{
				this._Buletin_Analizes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Formular_Analize = this;
		}
		
		private void detach_Buletin_Analizes(Buletin_Analize entity)
		{
			this.SendPropertyChanging();
			entity.Formular_Analize = null;
		}
	}
}
#pragma warning restore 1591
